/*
 * This file was generated by guardrail (https://github.com/guardrail-dev/guardrail).
 * Modifications will be overwritten; instead edit the OpenAPI/Swagger spec file.
 */
package sell.fulfillment.definitions

import cats.syntax.either._
import io.circe._
import io.circe.syntax._
import cats.implicits._
import _root_.sell.fulfillment.Implicits._
case class PricingSummary(adjustment: Option[Amount] = None, deliveryCost: Option[Amount] = None, deliveryDiscount: Option[Amount] = None, fee: Option[Amount] = None, priceDiscountSubtotal: Option[Amount] = None, priceSubtotal: Option[Amount] = None, tax: Option[Amount] = None, total: Option[Amount] = None)
object PricingSummary {
  implicit val encodePricingSummary: _root_.io.circe.Encoder.AsObject[PricingSummary] = {
    val readOnlyKeys = _root_.scala.Predef.Set[_root_.scala.Predef.String]()
    _root_.io.circe.Encoder.AsObject.instance[PricingSummary](a => _root_.io.circe.JsonObject.fromIterable(_root_.scala.Vector(("adjustment", a.adjustment.asJson), ("deliveryCost", a.deliveryCost.asJson), ("deliveryDiscount", a.deliveryDiscount.asJson), ("fee", a.fee.asJson), ("priceDiscountSubtotal", a.priceDiscountSubtotal.asJson), ("priceSubtotal", a.priceSubtotal.asJson), ("tax", a.tax.asJson), ("total", a.total.asJson)))).mapJsonObject(_.filterKeys(key => !(readOnlyKeys contains key)))
  }
  implicit val decodePricingSummary: _root_.io.circe.Decoder[PricingSummary] = new _root_.io.circe.Decoder[PricingSummary] { final def apply(c: _root_.io.circe.HCursor): _root_.io.circe.Decoder.Result[PricingSummary] = for (v0 <- c.downField("adjustment").as[Option[Amount]]; v1 <- c.downField("deliveryCost").as[Option[Amount]]; v2 <- c.downField("deliveryDiscount").as[Option[Amount]]; v3 <- c.downField("fee").as[Option[Amount]]; v4 <- c.downField("priceDiscountSubtotal").as[Option[Amount]]; v5 <- c.downField("priceSubtotal").as[Option[Amount]]; v6 <- c.downField("tax").as[Option[Amount]]; v7 <- c.downField("total").as[Option[Amount]]) yield PricingSummary(v0, v1, v2, v3, v4, v5, v6, v7) }
}