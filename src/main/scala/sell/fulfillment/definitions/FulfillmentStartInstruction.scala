/*
 * This file was generated by guardrail (https://github.com/guardrail-dev/guardrail).
 * Modifications will be overwritten; instead edit the OpenAPI/Swagger spec file.
 */
package sell.fulfillment.definitions

import cats.syntax.either._
import io.circe._
import io.circe.syntax._
import cats.implicits._
import _root_.sell.fulfillment.Implicits._
case class FulfillmentStartInstruction(ebaySupportedFulfillment: Option[Boolean] = None, finalDestinationAddress: Option[Address] = None, fulfillmentInstructionsType: Option[String] = None, maxEstimatedDeliveryDate: Option[String] = None, minEstimatedDeliveryDate: Option[String] = None, pickupStep: Option[PickupStep] = None, shippingStep: Option[ShippingStep] = None)
object FulfillmentStartInstruction {
  implicit val encodeFulfillmentStartInstruction: _root_.io.circe.Encoder.AsObject[FulfillmentStartInstruction] = {
    val readOnlyKeys = _root_.scala.Predef.Set[_root_.scala.Predef.String]()
    _root_.io.circe.Encoder.AsObject.instance[FulfillmentStartInstruction](a => _root_.io.circe.JsonObject.fromIterable(_root_.scala.Vector(("ebaySupportedFulfillment", a.ebaySupportedFulfillment.asJson), ("finalDestinationAddress", a.finalDestinationAddress.asJson), ("fulfillmentInstructionsType", a.fulfillmentInstructionsType.asJson), ("maxEstimatedDeliveryDate", a.maxEstimatedDeliveryDate.asJson), ("minEstimatedDeliveryDate", a.minEstimatedDeliveryDate.asJson), ("pickupStep", a.pickupStep.asJson), ("shippingStep", a.shippingStep.asJson)))).mapJsonObject(_.filterKeys(key => !(readOnlyKeys contains key)))
  }
  implicit val decodeFulfillmentStartInstruction: _root_.io.circe.Decoder[FulfillmentStartInstruction] = new _root_.io.circe.Decoder[FulfillmentStartInstruction] { final def apply(c: _root_.io.circe.HCursor): _root_.io.circe.Decoder.Result[FulfillmentStartInstruction] = for (v0 <- c.downField("ebaySupportedFulfillment").as[Option[Boolean]]; v1 <- c.downField("finalDestinationAddress").as[Option[Address]]; v2 <- c.downField("fulfillmentInstructionsType").as[Option[String]]; v3 <- c.downField("maxEstimatedDeliveryDate").as[Option[String]]; v4 <- c.downField("minEstimatedDeliveryDate").as[Option[String]]; v5 <- c.downField("pickupStep").as[Option[PickupStep]]; v6 <- c.downField("shippingStep").as[Option[ShippingStep]]) yield FulfillmentStartInstruction(v0, v1, v2, v3, v4, v5, v6) }
}