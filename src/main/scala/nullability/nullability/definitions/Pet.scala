/*
 * This file was generated by Guardrail (https://github.com/twilio/guardrail).
 * Modifications will be overwritten; instead edit the OpenAPI/Swagger spec file.
 */
package nullability.definitions
import cats.syntax.either._
import io.circe._
import io.circe.syntax._
import io.circe.generic.semiauto._
import cats.implicits._
import _root_.nullability.Implicits._
case class Pet(name: Option[String] = None, status: Option[String] = None)
object Pet {
  implicit val encodePet: Encoder.AsObject[Pet] = {
    val readOnlyKeys = Set[String]()
    Encoder.AsObject.instance[Pet](a => JsonObject.fromIterable(Vector(("name", a.name.asJson), ("status", a.status.asJson)))).mapJsonObject(_.filterKeys(key => !(readOnlyKeys contains key)))
  }
  implicit val decodePet: Decoder[Pet] = new Decoder[Pet] { final def apply(c: HCursor): Decoder.Result[Pet] = for (v0 <- c.downField("name").as[Option[String]]; v1 <- c.downField("status").as[Option[String]]) yield Pet(v0, v1) }
}